create.class=Created class ${class.name} in package ${class.package.name}.
create.class.field=Created field #set($builder = false)#foreach ($field in ${fields}) #set($builder = ${field.builderPattern})${field.name}#if ($field.gettersetter && $field.gettersetter != "") with $field.gettersetter#end#if ($foreach.count < ${fields.size()}),#end#end#if ($builder) with Builder Pattern#end.
create.class.method=Created method #foreach ($method in ${methods})${method.name}#if ($foreach.count < ${methods.size()}), #end#end.
create.file=Created file ${file.name}.
create.package=Created package ${package.name}.
create.innerclass=Created innerclass #foreach ($innerClass in ${innerClasses})${innerClass.name}#if ($foreach.count < ${innerClasses.size()}), #end#end.
create.localvariable=Created local variable #foreach ($localvar in ${localvars})${localvar.name}#if ($foreach.count < ${localvars.size()}), #end#end.
create.class.stubmethod=Created stub method #foreach ($method in ${stubMethods})${method.name} #if ($foreach.count < ${stubMethods.size()}), #end#end.
create.class.testmethod=Created test method #foreach ($method in ${testMethods})${method.name} #if ($foreach.count < ${testMethods.size()}), #end#end.
modify.field=Modified field #foreach ($field in ${modifyField})${field.name} #if ($field.gettersetter && $field.gettersetter != "") and its $field.gettersetter#end#if ($foreach.count < ${modifyField.size()}), #end#end.
create.folder=Created folder ${folder.name}.
#modified.class=Modified ${class.name}.
modified.file=Modified ${file.name}
#adding.class=Adding class ${class.name} in package ${class.package.name}.
adding.file=Adding file ${file.name}.

#create.class=created ${class.name} in ${class.package.name}
#create.class.field=created field #foreach ($field in ${fields}) ${field.name} in ${class.name} #end
#create.class.method=created method ${method.name} in ${class.name}
#create.file=created file ${file.name}.
#create.package=created package ${package.name}.


